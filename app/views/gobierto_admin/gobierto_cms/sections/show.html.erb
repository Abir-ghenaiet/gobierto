<div class="admin_breadcrumb">
  <%= link_to t("gobierto_admin.welcome.index.title"), admin_root_path %> »
  <%= link_to t(".sections"), admin_cms_sections_path %>
  <%= link_to @section.title, admin_cms_section_path(@section) %>
</div>

<h1><%= @section.title %></h1>

<div class="admin_tools right">
  <%= link_to '<i class="fa fa-cog"></i> Configuración'.html_safe, edit_admin_cms_section_path(@section), class: 'open_remote_modal' %>
</div>

<div class="pure-g">

  <div class="pure-u-1 pure-u-md-1-2 p_h_r_2">
    TREE
    <div id="tree1" ondragover="allowDrop(event)"></div>
  </div>

  <div class="pure-u-1 pure-u-md-1-2">

    <div class="form_item input_text">
      <label for="name"><%= t('.select_page') %></label>
      <input type="text" placeholder="<%= t('.placeholders.search') %>" name="q" id="gobierto_search" data-autocomplete="<%= admin_cms_section_pages_path(@section, format: :js) %>" element_id="#pages" />
    </div>

    <h3><%= t('.last_edited_pages') %></h3>

    <div class="activity_feed section_editor">
      <%= render 'pages_filter' %>
    </div>
  </div>
</div>

<script type="text/javascript">
  window.searchClient = {
    client: algoliasearch('<%= Rails.application.secrets.algolia_application_id %>', '<%= Rails.application.secrets.algolia_search_api_key %>'),
    indexes: ["<%= GobiertoCms::Page.search_index_name %>"],
    filters: "site_id:<%= algolia_search_client.site.id %>"
  };

  var data = [
      {
          name: 'node1', id: 1,
          children: [
              { name: 'child1', id: 2 },
              { name: 'child2', id: 3 }
          ]
      },
      {
          name: 'node2', id: 4,
          children: [
              { name: 'child3', id: 5 }
          ]
      }
  ];

  $(function() {
    var $tree = $('#tree1');

    $('#tree1').tree({
        data: data,
        autoOpen: true,
        dragAndDrop: true,
        onCreateLi: function(node, $li) {
            // Append a link to the jqtree-element div.
            // The link has an url '#node-[id]' and a data property 'node-id'.
            $li.find('.jqtree-element').append(
                '<a remote=true href="#node-'+ node.id +'" class="edit" data-node-id="'+
                node.id +'"> delete</a>'
            );
        }
    });

    // Handle a click on the edit link
    $tree.on(
        'click', '.edit',
        function(e) {
            // Get the id from the 'node-id' data property
            var node_id = $(e.target).data('node-id');

            // Get the node from the tree
            var node = $tree.tree('getNodeById', node_id);

            if (node) {
                // Display the node name
                alert(node.name);
                $tree.tree('removeNode', node);
            }
            return false;
        }
    );
  });

  function allowDrop(event) {
      event.preventDefault();
  }

  // function drop(event, ui) {
  //   console.log(ui);
  //
  //   $('#tree1').tree(
  //     'appendNode',
  //     {
  //         name: 'new_node'
  //     }
  //   );
  // }

  function uniqId() {
    return Math.round(new Date().getTime() + (Math.random() * 100));
  }

  $( "#tree1" ).on( "drop", function( event, ui ) {
      console.log($(this).attr('data_title'));

      $('#tree1').tree(
        'appendNode',
        {
            name: 'new_node',
            id: uniqId()
        }
      );
  } );
</script>
