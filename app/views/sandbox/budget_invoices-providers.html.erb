<div class="column">

  <main class="content">
    <!-- Welcome block -->
    <div class="block">
      <div class="pure-g header_block_inline">
        <div class="pure-u-1 pure-u-md-12-24">
          <div class="inline_header">
            <h2 class="with_description p_h_r_1">PROVEEDORES Y FACTURAS</h2>
            <%= render partial: 'gobierto_budgets/budgets/year_breadcrumb', locals: {path_calculation_method: :gobierto_budgets_budgets_path} %>
          </div>

          <p>
            ¿A qué proveedores contrata el Ayuntamiento? ¿Qué facturas paga? Desde esta sección podrás consultar un resumen y tener contexto de la información agregada, así como revisar el detalle de cada uno de los pagos que realiza el Ayuntamiento.
          </p>

          <p>
            <% @budgets_data_updated_at = 10.day.ago %>
            <% if @budgets_data_updated_at %>
              <strong>Última actualización</strong>: <%= l(@budgets_data_updated_at, format: '%d %B %Y') %>.
            <% end %>
          </p>

          <p class="common-links">
            <span><a href="">Más información</a></span><span><a href="">Preguntas frecuentes</a></span><span><a href="">Suscribete</a></span>
          </p>

        </div>

        <div class="pure-u-1 pure-u-md-12-24 right">
          <%= image_tag('illustrations/consultas.jpg', class: 'img_header m_v_4') %>
        </div>
      </div>
    </div>

    <div class="separator"></div>

    <div class="pure-g metric_boxes">

      <div class="pure-u-1 pure-u-md-1-2 metric_box">
        <div class="inner">
          <h3>Facturas</h3>
          <div class="metric">50.000 facturas</div>
          <div class="metric_details flex">
            <label>De los cuales:</label>
            <div>
              <strong>34%</strong> son de <strong>123 empresas</strong><br>
              <strong>66%</strong> son de <strong>245 autónomos</strong>
            </div>
          </div>
        </div>
      </div>

      <div class="pure-u-1 pure-u-md-1-2 metric_box">
        <div class="inner">
          <h3>Media y mediana</h3>
          <div class="pure-g">
            <div class="pure-u-1-2">
              <div class="metric">
                9.876€ <small>importe medio</small>
              </div>
            </div>
            <div class="pure-u-1-2">
              <div class="metric">
                7.876€ <small>importe mediano</small>
              </div>
              <div class="explanation explanation--relative">
                Es decir, la mitad de las facturas son de este importe o inferior
              </div>
            </div>
          </div>
        </div>
      </div>

    </div>

    <div class="block">
      <h2 class="with_description">Todos los proveedores de un vistazo</h2>

      <div class="pure-g m_t_1">
        <div class="pure-u-1">
          <h3 class="m_v_0 mt1">Distribución por meses</h3>
          <div id="bars"></div>
        </div>
        <div class="pure-u-1 pure-u-md-1-2">
          <h3 class="m_v_0 mt1">Principales proveedores</h3>
          <div id="hbars1"></div>
        </div>
        <div class="pure-u-1 pure-u-md-1-2">
          <h3 class="m_v_0 mt1">Distribución por importes</h3>
          <div id="hbars2"></div>
        </div>
        <pre id="data" style="display:none">
          Expt,Run,Speed
          1,1,850
          1,2,740
          1,3,900
          1,4,1070
          1,5,930
          1,6,850
          1,7,950
          1,8,980
          1,9,980
          1,10,880
          1,11,1000
          1,12,980
          1,13,930
          1,14,650
          1,15,760
          1,16,810
          1,17,1000
          1,18,1000
          1,19,960
          1,20,960
          2,1,960
          2,2,940
          2,3,960
          2,4,940
          2,5,880
          2,6,800
          2,7,850
          2,8,880
          2,9,900
          2,10,840
          2,11,830
          2,12,790
          2,13,810
          2,14,880
          2,15,880
          2,16,830
          2,17,800
          2,18,790
          2,19,760
          2,20,800
          3,1,880
          3,2,880
          3,3,880
          3,4,860
          3,5,720
          3,6,720
          3,7,620
          3,8,860
          3,9,970
          3,10,950
          3,11,880
          3,12,910
          3,13,850
          3,14,870
          3,15,840
          3,16,840
          3,17,850
          3,18,840
          3,19,840
          3,20,840
          4,1,890
          4,2,810
          4,3,810
          4,4,820
          4,5,800
          4,6,770
          4,7,760
          4,8,740
          4,9,750
          4,10,760
          4,11,910
          4,12,920
          4,13,890
          4,14,860
          4,15,880
          4,16,720
          4,17,840
          4,18,850
          4,19,850
          4,20,780
          5,1,890
          5,2,840
          5,3,780
          5,4,810
          5,5,760
          5,6,810
          5,7,790
          5,8,810
          5,9,820
          5,10,850
          5,11,870
          5,12,870
          5,13,810
          5,14,740
          5,15,810
          5,16,940
          5,17,950
          5,18,800
          5,19,810
          5,20,870
        </pre>
      </div>

      <link rel="stylesheet" type="text/css" href="https://dc-js.github.io/dc.js/css/dc.css" />
      <script src="https://dc-js.github.io/dc.js/js/d3.js"></script>
      <script src="https://dc-js.github.io/dc.js/js/crossfilter.js"></script>
      <script src="https://dc-js.github.io/dc.js/js/dc.js"></script>
      <script src="https://rawgit.com/crossfilter/reductio/master/reductio.js"></script>
      <script src="https://npmcdn.com/universe@latest/universe.js"></script>
      <script>
        var bars = dc.barChart("#bars");
        var hbars1 = dc.rowChart("#hbars1");
        var hbars2 = dc.rowChart("#hbars2");

        var experiments = d3.csv.parse(d3.select('pre#data').text());
        experiments.forEach(function(x) {
          x.Speed = +x.Speed;
        });

        var ndx = crossfilter(experiments);
        var runDimension = ndx.dimension(function(d) {
            return +d.Run;
          });
        var speedSumGroup = runDimension.group().reduceSum(function(d) {
            return d.Speed * d.Run / 1000;
          });

        bars
          .x(d3.scale.linear().domain([6, 20]))
          .renderHorizontalGridLines(true)
          .dimension(runDimension)
          .group(speedSumGroup)
          .gap(30)
          .on('renderlet', function(bars) {
            bars.selectAll('rect').on("click", function(d) {
              console.log("click!", d);
            });
          });

        hbars1
          .x(d3.scale.linear().domain([6, 20]))
          .dimension(runDimension)
          .group(speedSumGroup)
          .elasticX(true)
          .colors('#1f77b4')
          .labelOffsetX(-20)
          // .xAxis().tickFormat(function (v) {return v + '€';})
          .on('renderlet', function(hbars1) {
            hbars1.selectAll('rect').on("click", function(d) {
              console.log("click!", d);
            });
          });

        hbars2
          .x(d3.scale.linear().domain([6, 20]))
          .dimension(runDimension)
          .group(speedSumGroup)
          .elasticX(true)
          .colors('#1f77b4')
          .labelOffsetX(-20)
          // .xAxis().tickFormat(function (v) {return v + '€';})
          .on('renderlet', function(hbars2) {
            hbars2.selectAll('rect').on("click", function(d) {
              console.log("click!", d);
            });
          });

        bars.render();
        hbars1.render();
        hbars2.render();
      </script>
    </div>

  </main>

</div>
