<div class="planification-content">
  <!-- Axes level -->
  <section class="level_0" :class="{ 'is-active': isOpen(0), 'is-mobile-open': openMenu }">
    <div
      class="node-root"
      v-for="(model, index) in json"
      :class="['cat_' + setRootColor(index), { 'is-root-open': parseInt(activeNode.uid) === index } ]"
    >
      <node-root :model="model" :key="model.id" @selection="setSelection" @open-menu-mobile="openMenu = !openMenu"></node-root>
    </div>
  </section>

  <% generic_levels = @levels == 2 ? 1 : @levels %> <% (1..generic_levels).each do |level_index| %>
  <!-- Lines level -->
  <section class="level_<%= level_index -%>" v-if="isOpen(<%= level_index -%>)" :class="['cat_' + color() ]">
    <% unless level_index == @levels %>
    <div class="node-breadcrumb mb2">
      <a data-turbolinks="false" @click.stop="resetParent">
        <%= t("gobierto_plans.plan_types.show.starts") %>
      </a>
    </div>

    <div class="lines-header">
      <div>
        {{ (activeNode.attributes || {}).children_count }}
        {{ getLabel(activeNode.level, (activeNode.attributes || {}).children_count) | translate }}
      </div>

      <div><%= t("gobierto_plans.plan_types.show.percentage_progress") %></div>
    </div>
    <% end %>
    
    <% if level_index == @levels %>
    <div class="node-action-line">
      <div class="action-line--header node-list cat--negative">
        <div class="node-title">
          <div><i class="fas fa-caret-down"></i></div>
          <h3>{{ (activeNode.attributes || {}).title | translate }}</h3>
        </div>
        <div>
          {{ (activeNode.attributes || {}).children_count }}
          {{ getLabel(activeNode.level, (activeNode.attributes || {}).children_count) | translate }}
        </div>
        <div>{{ (activeNode.attributes || {}).progress || 0 | percent }}</div>
      </div>

      <div class="node-action-line">
        <ul class="action-line--list">
          <li v-for="(model, index) in activeNode.children">
            <node-list :model="model" :key="model.id" :level="levelKeys" @toggle="toggle(activeNode.id, index)"></node-list>
            <transition name="slide-fade">
              <table-view
                :model="model"
                :key="model.id"
                :header="showTableHeader"
                :open="openNode"
                @activate="activatePlugins"
                @custom-fields="parseCustomFields"
                @selection="setSelection"
                v-if="showTable[`${activeNode.id}-${index}`]"
              >
              </table-view>
            </transition>
          </li>
        </ul>
      </div>
    </div>
    <% else %>
    <ul class="lines-list">
      <li class="mb2" v-for="(model, index) in activeNode.children">
        <node-list :model="model" :key="model.id" :level="levelKeys" @selection="setSelection"></node-list>
      </li>
    </ul>
    <% end %>
  </section>
  <% end %>
  
  <% if @levels == 2 %>
  <!-- Acts level -->
  <section class="level_2" v-if="isOpen(2)" :class="['cat_' + color() ]">
    <div class="node-breadcrumb mb2">
      <a data-turbolinks="false" @click.stop="resetParent">
        <%= t("gobierto_plans.plan_types.show.starts") %>
      </a>
      <a data-turbolinks="false" @click.stop="setParent">
        <i class="fas fa-caret-right"></i>
        {{ (getParent().attributes || {}).title | translate }}
      </a>
    </div>

    <div class="node-action-line">
      <div class="action-line--header node-list cat--negative">
        <div class="node-title">
          <div><i class="fas fa-caret-down"></i></div>
          <h3>{{ (activeNode.attributes || {}).title | translate }}</h3>
        </div>
        <div>{{ (activeNode.children || []).length }} {{ getLabel(activeNode.level, (activeNode.children || []).length) | translate }}</div>
        <div>{{ (activeNode.attributes || {}).progress || 0 | percent }}</div>
      </div>

      <ul class="action-line--list">
        <li v-for="(model, index) in activeNode.children">
          <node-list :model="model" :key="model.id" :level="levelKeys" @toggle="toggle(activeNode.id, index)"></node-list>
          <transition name="slide-fade">
            <table-view
              :model="model"
              :key="model.id"
              :header="showTableHeader"
              :open="openNode"
              @selection="setSelection"
              @activate="activatePlugins"
              @custom-fields="parseCustomFields"
              v-if="showTable[`${activeNode.id}-${index}`]"
            >
            </table-view>
          </transition>
        </li>
      </ul>
    </div>
  </section>
  <% end %>

  <!-- Projects level -->
  <section class="level_<%= @levels + 1 %>" v-if="isOpen(<%= @levels + 1 %>)" :class="['cat_' + color() ]">
    <div class="node-breadcrumb mb2">
      <a data-turbolinks="false" @click.stop="resetParent">
        <%= t("gobierto_plans.plan_types.show.starts") %>
      </a>
      <template v-for="level in activeNode.level">
        <a data-turbolinks="false" @click.stop="setParent(level)">
          <i class="fas fa-caret-right"></i>
          {{ (getParent(level).attributes || {}).title | translate }}
        </a>
      </template>
    </div>

    <div class="node-action-line">
      <div class="action-line--header node-list cat--negative">
        <h3>{{ (activeNode.attributes || {}).title | translate }}</h3>
      </div>

      <div class="node-project-detail">
        <!-- Native fields -->
        <div class="project-mandatory">
          <div>
            <div class="mandatory-list">
              <div class="mandatory-title"><%= t("gobierto_plans.plan_types.show.progress") %></div>
              <div class="mandatory-desc">{{ activeNode.attributes.progress | percent }}</div>
            </div>
            <div class="mandatory-progress">
              <div :style="{ width: computedProgress + '%'}"></div>
            </div>
          </div>
          <div>
            <div class="mandatory-list">
              <div class="mandatory-title">
                <%= t("gobierto_plans.plan_types.show.starts") %> - <%= t("gobierto_plans.plan_types.show.ends") %>
              </div>
              <div class="mandatory-desc">{{ activeNode.attributes.starts_at | date }} - {{ activeNode.attributes.ends_at | date }}</div>
            </div>
            <div class="mandatory-list">
              <div class="mandatory-title"><%= t("gobierto_plans.plan_types.show.status") %></div>
              <div class="mandatory-desc">{{ activeNode.attributes.status | translate }}</div>
            </div>
          </div>
        </div>

        <!-- CUSTOM FIELDS -->
        <template v-if="Object.keys(customFields).length">
          <!-- Paragraph template  -->
          <template v-for="item in customFields.paragraphs">
            <div class="project-description" v-if="item.value">
              <div class="description-title" :class="{ 'mb1': item.value.length < 200 }">
                <span v-if="item.custom_field_name_translations">{{ item.custom_field_name_translations | translate }}</span>
                <span v-else><%= t("gobierto_plans.plan_types.show.desc") %></span>
              </div>

              <div :class="{ 'is-hidden': item.value.length > 200 }" v-html="item.value"></div>

              <button v-if="item.value.length > 200" class="description-more" @click="hideText($event)">
                <span v-if="readMoreButton"><%= t("gobierto_plans.plan_types.show.read_more") %></span>
                <span v-else><%= t("gobierto_plans.plan_types.show.read_less") %></span>
              </button>
            </div>
          </template>

          <!-- Rest of fields template  -->
          <template v-if="customFields.rest.length">
            <div class="project-description project-grid">
              <template v-for="item in customFields.rest">
                <div class="description-list mb1">
                  <div class="description-title">{{ item.custom_field_name_translations | translate }}</div>

                  <template v-if="item.custom_field_id === 'sdgs'">
                    <div class="description-desc">
                      <div class="ods-goal-container">
                        <div class="ods-goal-content" v-for="id in item.external_id">
                          <a :href="`${baseUrl}/ods/${Number(id)}`" :class="`ods-goal ods-goal__${id}__${item.locale}`"></a>
                        </div>
                      </div>
                    </div>
                  </template>

                  <template v-else-if="typeOf(item.value) === 'array'">
                    <div class="description-desc">
                      <div v-for="value in item.value">{{ value }}</div>
                    </div>
                  </template>

                  <template v-else>
                    <div class="description-desc">{{ item.value }}</div>
                  </template>

                </div>
              </template>
            </div>
          </template>
        </template>

        <!-- Rails must add the markup if plugin is available -->
        <% availablePlugins = ['budgets', 'human_resources', 'indicators'] %> <% availablePlugins.each do |plugin| %>

        <!-- Add plugin markup -->
        <div data-plugin="<%= plugin %>"></div>

        <% end %>
        <!-- End Rails plugins -->
      </div>
    </div>
  </section>
</div>
