/*
 * Planification
 *
 */

// Vars
$nodeLevel1IllustrationWidth: 33%;
$nodeLevel1Height:150px;

$node-colors: (
  cNode1: #DB524B,
  cNode2: #00909E,
  cNode3: #F1AD44,
  cNode4: #85A81C,
  cNode5: #00529E
);

// Functions
@function getColor($key) {
  @if map-has-key($node-colors, $key) {
    @return map-get($node-colors, $key);
  }

  @warn "Unknown `#{$key}` in module-planification/$node-colors.";
  @return null;
}

// styles only concern this module
.gobierto_planification {

  .planification-header {
    border-top: 1px solid $color_1_soft;
    border-bottom: 1px solid $color_1_soft;
    padding: 1rem;
    display: flex;

    .header-resume{
      flex-basis: $nodeLevel1IllustrationWidth;

      h3 {
        margin-top: 0;
      }

      span {
        font-size: $f1;
      }
    }

    .header-detail{}
  }

  .planification-content {
    display: flex;

    .lines-header {
      display: flex;
      justify-content: space-between;
      margin: 0 0 20px;
      color: $color_text;
      font-size: $f7;
    }

    .lines-list {
      margin: 0;
      padding: 0;
    }
  }

  // @component node-root
  .node-root {
    position: relative;
    display: flex;

    &:hover {
      opacity: .9;
    }

    a {
      display: flex;
      width: 100%;
      color: #FFF;
      text-decoration: none;
      max-height: $nodeLevel1Height;
    }

    .node-img {
      flex: 0 0 $nodeLevel1IllustrationWidth;
      mix-blend-mode: multiply;

      img {
        max-height: $nodeLevel1Height;
        width: 100%;
        object-fit: cover;
      }
    }

    .node-info {
      position: relative;
      flex: 1;

      .info-progress {
        top: 0;
        left: 0;
        position: absolute;
        height: 100%;
        z-index: 1;
      }

      .info-content {
        position: relative;
        z-index: 2;
        box-sizing: border-box;
        padding: 2em;
        color: #FFF;
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;

        h3 {
          color: #FFF;
          margin: 0 0 .25em 0;
          font-size: $f3;
        }

        span {
          font-size: $f3;
          font-weight: 200;
        }
      }
    }

    @for $i from 1 through length($node-colors) {
      // Get color from position `i` of `node-colors` array keys
      $color: getColor(nth(map-keys($node-colors), $i));

      &.cat_#{$i} {
        background-color: transparentize($color, .05);
        .progress {
          background-color: $color;
        }
      }
    }
  }

  .node-list {
      padding: 1em 0 0;
      border-top: 1px solid;
      display: flex;
      justify-content: space-between;

      h3 {
        margin: 0 0 0.5em;

        a {
          text-decoration: none;
        }

        &:hover {
          opacity: 0.75;
        }
      }

      .fa {
        padding: .15em .45em;
        line-height: 1;
        border-radius: 3px;
      }
    }

  section.level_1 {
    flex: 1 1 0%;
  }

  section.level_2 {
    display: flex;
    flex: 10;
    padding: 2em 3em;

    @for $i from 1 through length($node-colors) {
      // Get color from position `i` of `node-colors` array keys
      $color: getColor(nth(map-keys($node-colors), $i));

      &.cat_#{$i} {
        background: transparentize($color, .9);
        color: $color;
        h3, h3 a {
          color: $color;
        }
        .node {
          border-top-color: transparentize($color, .25);
        }
        .fa {
          background: transparentize($color, .9);
        }
      }
    }
  }
}
